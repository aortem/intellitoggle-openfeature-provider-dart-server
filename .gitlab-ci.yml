stages:
  - setup
  - validation
  - gherkin-test
# - unit_testing
# - frontend
# - backend
#  - release

# The pipeline covers a series of triggers to ensure full testing and coverage

# Debug Stage
debug_merge_request:
  stage: setup
  script:
    - echo "Basic Merge Request Variables..." 
    - echo "CI_MERGE_REQUEST_IID is '$CI_MERGE_REQUEST_IID'"
    - echo "CI_MERGE_REQUEST_SOURCE_BRANCH_NAME is $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
    - echo "CI_MERGE_REQUEST_TARGET_BRANCH_NAME is $CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
    - echo "CI_MERGE_REQUEST_EVENT_TYPE is $CI_MERGE_REQUEST_EVENT_TYPE"
    
    - echo "Commit Information Variables..."
    - echo "CI_COMMIT_REF_NAME is $CI_COMMIT_REF_NAME"
    - echo "CI_COMMIT_BRANCH is $CI_COMMIT_BRANCH"
    - echo "CI_COMMIT_MESSAGE is $CI_COMMIT_MESSAGE" 

    - echo "Determining branch name..."
    - BRANCH_NAME=${CI_COMMIT_BRANCH:-${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME:-$CI_COMMIT_REF_NAME}}
    - echo "Branch name determined $BRANCH_NAME"

    - echo "Pipeline Metadata..."
    - echo "CI_PIPELINE_SOURCE is $CI_PIPELINE_SOURCE"
  rules:
    - if: '$CI_PIPELINE_SOURCE'  # Forces execution in ALL scenarios
      when: always

# # Validation Conditional Triggers for Frontend
# validation_trigger_frontend:
#   stage: validation
#   trigger:
#     include: tools/pipelines/firebase-hosting/child-ci-production-frontend.yml
#   rules:
#     # Condition 1: Branch is not main, qa, or development
#     - if: '$CI_COMMIT_REF_NAME != "main" && $CI_COMMIT_REF_NAME != "qa" && $CI_COMMIT_REF_NAME != "development"'
#       when: always
#     # Condition 2: Triggered by a merge request event
#     - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
#       when: always  
#     # Condition 3: Triggered by a push event
#     - if: '$CI_PIPELINE_SOURCE == "push"'
#       when: always
#     # Condition 4: Triggered by a merge request event (target branch is "development")
#     - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "development"'
#       when: always
#     # Condition 5: Triggered by a merge request event (source branch is "development", "qa", or "main")
#     - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "development" || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "qa" || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "main"'
#       when: always
#     # Fallback: Skip if no condition matches
#     - when: never

# # Validation Conditional Triggers for Service Project Setup
# validation_trigger_backend:
#   stage: validation
#   trigger:
#     include: tools/pipelines/service-project-setup/child-ci-production-backend.yml
#   rules:
#     # Condition 1: Branch is not main, qa, or development
#     - if: '$CI_COMMIT_REF_NAME != "main" && $CI_COMMIT_REF_NAME != "qa" && $CI_COMMIT_REF_NAME != "development"'
#       when: always
#     # Condition 2: Triggered by a push event
#     - if: '$CI_PIPELINE_SOURCE == "push"'
#       when: always
#     # Condition 3: Triggered by a merge request event (source branch is not "development")
#     - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != "development"'
#       when: always
#     # Condition 4: Triggered by a merge request event (source branch is "development", "qa", or "main")
#     - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "development" || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "qa" || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "main"'
#       when: always
#     # Fallback: Skip if no condition matches
#     - when: never

openfeature_gherkin_conformance:
  stage: gherkin-test
  image: dart:stable
  script:
    - dart pub get
    - dart test test/gherkin/gherkin_suite_test.dart --concurrency=1
  artifacts:
    when: always
    reports:
      junit: build/test-results.xml